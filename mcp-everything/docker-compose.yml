services:
  mcp-everything:
    build:
      context: ../
      dockerfile: ./mcp-everything/Dockerfile
    container_name: mcp-everything
    restart: unless-stopped
    networks:
      - public
    expose:
      - "3000"
    environment:
      - MCP_PROTOCOL_VERSION=${MCP_PROTOCOL_VERSION:-2025-06-18}
      - BASE_DOMAIN=${BASE_DOMAIN}
    # Disable health check for now as the server has issues
    # healthcheck:
    #   test: ["CMD", "nc", "-z", "localhost", "3000"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 3
    #   start_period: 30s
    labels:
      # Basic routing with auth - priority 2
      - "traefik.enable=true"
      - "traefik.http.routers.mcp-everything.rule=Host(`mcp-everything.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything.tls=true"
      - "traefik.http.routers.mcp-everything.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything.priority=2"
      - "traefik.http.routers.mcp-everything.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything.service=mcp-everything"
      
      # Service definition
      - "traefik.http.services.mcp-everything.loadbalancer.server.port=3000"
      
      # OAuth discovery routing - priority 10 (highest)
      - "traefik.http.routers.mcp-everything-oauth-discovery.rule=Host(`mcp-everything.${BASE_DOMAIN}`) && PathPrefix(`/.well-known/oauth-authorization-server`)"
      - "traefik.http.routers.mcp-everything-oauth-discovery.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-oauth-discovery.tls=true"
      - "traefik.http.routers.mcp-everything-oauth-discovery.priority=10"
      - "traefik.http.routers.mcp-everything-oauth-discovery.service=auth@docker"
      - "traefik.http.routers.mcp-everything-oauth-discovery.middlewares=oauth-discovery-rewrite-mcp-everything"
      
      # OAuth discovery header rewrite middleware
      - "traefik.http.middlewares.oauth-discovery-rewrite-mcp-everything.headers.customrequestheaders.Host=auth.${BASE_DOMAIN}"
      
      # Health check route without auth - priority 8
      - "traefik.http.routers.mcp-everything-health.rule=Host(`mcp-everything.${BASE_DOMAIN}`) && Path(`/health`)"
      - "traefik.http.routers.mcp-everything-health.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-health.tls=true"
      - "traefik.http.routers.mcp-everything-health.priority=8"
      - "traefik.http.routers.mcp-everything-health.service=mcp-everything"
      # No auth middleware for health checks!
      
      # CORS preflight route (OPTIONS) - priority 6
      - "traefik.http.routers.mcp-everything-cors.rule=Host(`mcp-everything.${BASE_DOMAIN}`) && Method(`OPTIONS`)"
      - "traefik.http.routers.mcp-everything-cors.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-cors.tls=true"
      - "traefik.http.routers.mcp-everything-cors.priority=6"
      - "traefik.http.routers.mcp-everything-cors.service=mcp-everything"
      - "traefik.http.routers.mcp-everything-cors.middlewares=mcp-cors@docker"
      # No auth middleware for CORS preflight!
      
      # Catch-all route - priority 1 (lowest)
      - "traefik.http.routers.mcp-everything-catchall.rule=Host(`mcp-everything.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-catchall.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-catchall.tls=true"
      - "traefik.http.routers.mcp-everything-catchall.priority=1"
      - "traefik.http.routers.mcp-everything-catchall.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-catchall.service=mcp-everything"
      
      # Additional FQDN configurations (a-z)
      # mcp-everything-a
      - "traefik.http.routers.mcp-everything-a.rule=Host(`mcp-everything-a.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-a.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-a.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-a.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-a.service=mcp-everything"
      # mcp-everything-b
      - "traefik.http.routers.mcp-everything-b.rule=Host(`mcp-everything-b.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-b.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-b.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-b.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-b.service=mcp-everything"
      # mcp-everything-c
      - "traefik.http.routers.mcp-everything-c.rule=Host(`mcp-everything-c.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-c.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-c.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-c.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-c.service=mcp-everything"
      # mcp-everything-d
      - "traefik.http.routers.mcp-everything-d.rule=Host(`mcp-everything-d.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-d.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-d.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-d.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-d.service=mcp-everything"
      # mcp-everything-e
      - "traefik.http.routers.mcp-everything-e.rule=Host(`mcp-everything-e.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-e.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-e.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-e.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-e.service=mcp-everything"
      # mcp-everything-f
      - "traefik.http.routers.mcp-everything-f.rule=Host(`mcp-everything-f.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-f.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-f.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-f.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-f.service=mcp-everything"
      # mcp-everything-g
      - "traefik.http.routers.mcp-everything-g.rule=Host(`mcp-everything-g.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-g.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-g.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-g.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-g.service=mcp-everything"
      # mcp-everything-h
      - "traefik.http.routers.mcp-everything-h.rule=Host(`mcp-everything-h.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-h.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-h.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-h.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-h.service=mcp-everything"
      # mcp-everything-i
      - "traefik.http.routers.mcp-everything-i.rule=Host(`mcp-everything-i.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-i.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-i.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-i.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-i.service=mcp-everything"
      # mcp-everything-j
      - "traefik.http.routers.mcp-everything-j.rule=Host(`mcp-everything-j.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-j.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-j.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-j.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-j.service=mcp-everything"
      # mcp-everything-k
      - "traefik.http.routers.mcp-everything-k.rule=Host(`mcp-everything-k.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-k.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-k.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-k.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-k.service=mcp-everything"
      # mcp-everything-l
      - "traefik.http.routers.mcp-everything-l.rule=Host(`mcp-everything-l.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-l.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-l.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-l.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-l.service=mcp-everything"
      # mcp-everything-m
      - "traefik.http.routers.mcp-everything-m.rule=Host(`mcp-everything-m.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-m.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-m.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-m.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-m.service=mcp-everything"
      # mcp-everything-n
      - "traefik.http.routers.mcp-everything-n.rule=Host(`mcp-everything-n.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-n.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-n.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-n.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-n.service=mcp-everything"
      # mcp-everything-o
      - "traefik.http.routers.mcp-everything-o.rule=Host(`mcp-everything-o.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-o.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-o.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-o.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-o.service=mcp-everything"
      # mcp-everything-p
      - "traefik.http.routers.mcp-everything-p.rule=Host(`mcp-everything-p.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-p.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-p.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-p.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-p.service=mcp-everything"
      # mcp-everything-q
      - "traefik.http.routers.mcp-everything-q.rule=Host(`mcp-everything-q.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-q.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-q.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-q.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-q.service=mcp-everything"
      # mcp-everything-r
      - "traefik.http.routers.mcp-everything-r.rule=Host(`mcp-everything-r.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-r.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-r.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-r.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-r.service=mcp-everything"
      # mcp-everything-s
      - "traefik.http.routers.mcp-everything-s.rule=Host(`mcp-everything-s.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-s.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-s.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-s.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-s.service=mcp-everything"
      # mcp-everything-t
      - "traefik.http.routers.mcp-everything-t.rule=Host(`mcp-everything-t.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-t.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-t.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-t.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-t.service=mcp-everything"
      # mcp-everything-u
      - "traefik.http.routers.mcp-everything-u.rule=Host(`mcp-everything-u.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-u.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-u.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-u.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-u.service=mcp-everything"
      # mcp-everything-v
      - "traefik.http.routers.mcp-everything-v.rule=Host(`mcp-everything-v.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-v.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-v.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-v.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-v.service=mcp-everything"
      # mcp-everything-w
      - "traefik.http.routers.mcp-everything-w.rule=Host(`mcp-everything-w.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-w.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-w.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-w.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-w.service=mcp-everything"
      # mcp-everything-x
      - "traefik.http.routers.mcp-everything-x.rule=Host(`mcp-everything-x.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-x.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-x.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-x.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-x.service=mcp-everything"
      # mcp-everything-y
      - "traefik.http.routers.mcp-everything-y.rule=Host(`mcp-everything-y.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-y.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-y.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-y.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-y.service=mcp-everything"
      # mcp-everything-z
      - "traefik.http.routers.mcp-everything-z.rule=Host(`mcp-everything-z.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-everything-z.entrypoints=websecure"
      - "traefik.http.routers.mcp-everything-z.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-everything-z.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-everything-z.service=mcp-everything"