[project]
name = "mcp-oauth-gateway"
version = "0.1.0"
description = "Sacred MCP OAuth2 Gateway following the divine commandments"
authors = ["The Righteous Developer"]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "osx-arm64", "win-64"]

[tasks]
# Testing tasks - NO MOCKING ALLOWED!
test = "pytest tests/ -v"
test-all = "pytest tests/ -v --tb=short"
test-verbose = "pytest tests/ -v -s"
test-coverage = "pytest tests/ -v --cov=auth --cov-report=html --cov-report=term"

# Linting tasks - The Divine Code Quality Commandments!
lint = { cmd = "pre-commit run ruff --all-files && pre-commit run ruff-format --all-files && pre-commit run --all-files && python scripts/lint_pydantic_compliance.py", description = "Complete quality check: lint, format, pre-commit, and deprecation hunt" }
lint-quick = "pre-commit run ruff --all-files"
lint-fix = "pre-commit run ruff --all-files"
format = "pre-commit run ruff-format --all-files"
format-check = "pre-commit run ruff-format --all-files"
lint-pydantic = "python scripts/lint_pydantic_compliance.py"
lint-all = { cmd = "pre-commit run ruff --all-files && python scripts/lint_pydantic_compliance.py", description = "Ruff linting with deprecation hunting" }
lint-comprehensive = { cmd = "pre-commit run ruff --all-files && pre-commit run ruff-format --all-files && python scripts/lint_pydantic_compliance.py", description = "Fix, format, and hunt deprecations" }
pre-commit = "pre-commit"

# Documentation tasks
docs-clean = "jupyter-book clean docs/"
docs-build = { cmd = "jupyter-book build docs/", depends-on = ["docs-clean"] }

# Development server (for testing auth service locally)
dev-auth = "cd auth && uvicorn main:app --reload --host 0.0.0.0 --port 8000"

# MCP client installation - using proper pixi commands
install-mcp-client = "pixi add --editable ./mcp-streamablehttp-client"
install-mcp-fetch-native = "pixi add --editable ./mcp-fetch-streamablehttp-server"

[dependencies]
# Python runtime from conda-forge
python = ">=3.11,<3.13"

# Testing framework - pytest is blessed!
pytest = ">=7.4.0,<8"
pytest-asyncio = ">=0.21.0,<1"
pytest-cov = ">=4.1.0,<5"

# Web frameworks and tools
fastapi = ">=0.109.0,<1"
uvicorn = ">=0.25.0,<1"
httpx = ">=0.25.0,<1"
redis-py = ">=5.0.0,<6"

# Authentication and security
authlib = ">=1.3.0,<2"
cryptography = ">=41.0.0,<42"
python-multipart = ">=0.0.6,<1"

# Configuration and typing
pydantic = ">=2.5.0,<3"
pydantic-settings = ">=2.1.0,<3"

# Linting and formatting
ruff = ">=0.1.0,<1"
pre-commit = ">=3.5.0,<4"

# Documentation - Jupyter Book is blessed!
jupyter-book = ">=1.0.0,<2"
myst-parser = ">=2.0.0,<3"
sphinx = ">=7.0.0,<8"

# Utilities
python-dotenv = ">=1.0.0,<2"
pyyaml = ">=6.0,<7"
aiohttp = ">=3.12.13,<4"
beautifulsoup4 = ">=4.12.3,<5"
aiofiles = ">=24.0.0"

# CLI and utility packages
click = ">=8.0.0"
anyio = ">=3.0.0"
rich = ">=13.0.0"
requests = ">=2.32.4,<3"
pytest-timeout = ">=2.4.0,<3"
pytest-xdist = ">=3.7.0,<4"

[pypi-dependencies]
# PyPI-only dependencies (not available in conda-forge)
# MCP packages - PyPI only
mcp = ">=1.0.0"

# Build and publishing tools
robotspy = ">=0.8.0"
sphinxcontrib-mermaid = ">=0.9.0"
sphinx-tabs = ">=3.4.0"
twine = ">=6.1.0, <7"
build = ">=1.0.0, <2"
pip-audit = ">=2.6.0"
bandit = ">=1.7.0"

[feature.docs.dependencies]
# Additional dependencies for documentation
sphinx-autobuild = ">=2021.3.14"
sphinx-book-theme = ">=1.0.0"
sphinx-copybutton = ">=0.5.0"
sphinx-design = ">=0.5.0"

[target.linux-64.dependencies]
uvloop = ">=0.21.0,<1"

[target.osx-64.dependencies]
uvloop = ">=0.21.0,<1"

[target.osx-arm64.dependencies]
uvloop = ">=0.21.0,<1"

[environments]
# Default environment includes everything
default = { solve-group = "default" }

# Documentation environment
docs = { features = ["docs"], solve-group = "default" }

# Development environment with docs features
dev = { features = ["docs"], solve-group = "default" }
