[pytest]
asyncio_mode = auto
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
# ðŸ”¥ Sacred test configuration with deprecation hunting! âš¡
# Default test options - can be overridden with command line args
addopts = -v --tb=short --maxfail=5

# Parallel execution settings (when using -n flag)
# --dist loadscope: Tests in the same module run on the same worker
# --dist worksteal: Dynamic work distribution (good for uneven test times)
# Use: just test -n auto (for CPU count) or just test -n 4 (for 4 workers)

markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    asyncio: marks tests as asyncio tests
    deprecation_sensitive: marks tests as sensitive to deprecation warnings
    skip_redis_cleanup: marks tests that manage their own Redis state
    serial: marks tests that must run serially (not in parallel)
    redis_isolated: marks tests that need isolated Redis database
    heavy_resource: marks tests that use significant system resources

# ðŸ”¥ Warning filters - catch all deprecations! âš¡
filterwarnings =
    # Default: show all deprecation warnings
    default::DeprecationWarning
    default::PendingDeprecationWarning
    # Error on Pydantic deprecations (uncomment to make them fail tests)
    # error::DeprecationWarning:pydantic.*
    # Ignore specific known warnings that we can't control
    ignore::DeprecationWarning:urllib3.*
    ignore::DeprecationWarning:requests.*
    # SECURITY: Treat SSL verification warnings as errors - never bypass SSL!
    error::urllib3.exceptions.InsecureRequestWarning
    error::requests.packages.urllib3.exceptions.InsecureRequestWarning
