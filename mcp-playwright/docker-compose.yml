services:
  mcp-playwright:
    build:
      context: ../
      dockerfile: mcp-playwright/Dockerfile
    container_name: mcp-playwright
    restart: unless-stopped
    networks:
      - public
    environment:
      - MCP_CORS_ORIGINS=*
      - MCP_PROTOCOL_VERSION=${MCP_PROTOCOL_VERSION:-2025-06-18}
      # Playwright specific environment variables
      - PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
      - PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1
    labels:
      # OAuth Discovery Route (Priority 10 - Highest)
      - "traefik.enable=true"
      - "traefik.http.routers.mcp-playwright-oauth-discovery.rule=Host(`playwright.${BASE_DOMAIN}`) && PathPrefix(`/.well-known/oauth-authorization-server`)"
      - "traefik.http.routers.mcp-playwright-oauth-discovery.priority=10"
      - "traefik.http.routers.mcp-playwright-oauth-discovery.entrypoints=websecure"
      - "traefik.http.routers.mcp-playwright-oauth-discovery.service=auth@docker"
      - "traefik.http.routers.mcp-playwright-oauth-discovery.tls=true"
      - "traefik.http.routers.mcp-playwright-oauth-discovery.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.playwright-oauth-discovery-rewrite.headers.customrequestheaders.Host=auth.${BASE_DOMAIN}"
      - "traefik.http.routers.mcp-playwright-oauth-discovery.middlewares=playwright-oauth-discovery-rewrite"

      # Main MCP Route with Authentication (Priority 2)
      - "traefik.http.routers.mcp-playwright.rule=Host(`playwright.${BASE_DOMAIN}`) && PathPrefix(`/mcp`)"
      - "traefik.http.routers.mcp-playwright.priority=2"
      - "traefik.http.routers.mcp-playwright.entrypoints=websecure"
      - "traefik.http.routers.mcp-playwright.service=mcp-playwright"
      - "traefik.http.routers.mcp-playwright.tls=true"
      - "traefik.http.routers.mcp-playwright.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-playwright.middlewares=mcp-auth@docker,mcp-cors@docker"

      # Service Definition
      - "traefik.http.services.mcp-playwright.loadbalancer.server.port=3000"

      # CORS preflight route (OPTIONS) - Priority 4 (HIGHEST for OPTIONS)
      - "traefik.http.routers.mcp-playwright-cors.rule=Host(`playwright.${BASE_DOMAIN}`) && Method(`OPTIONS`)"
      - "traefik.http.routers.mcp-playwright-cors.priority=4"
      - "traefik.http.routers.mcp-playwright-cors.entrypoints=websecure"
      - "traefik.http.routers.mcp-playwright-cors.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-playwright-cors.service=mcp-playwright"

      # Catch-all route with auth - Priority 1 (LOWEST for HTTPS)
      - "traefik.http.routers.mcp-playwright-catchall.rule=Host(`playwright.${BASE_DOMAIN}`)"
      - "traefik.http.routers.mcp-playwright-catchall.priority=1"
      - "traefik.http.routers.mcp-playwright-catchall.entrypoints=websecure"
      - "traefik.http.routers.mcp-playwright-catchall.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mcp-playwright-catchall.middlewares=mcp-auth@docker,mcp-cors@docker"
      - "traefik.http.routers.mcp-playwright-catchall.service=mcp-playwright"

    healthcheck:
      test: ["CMD", "sh", "-c", "curl -s -X POST http://localhost:3000/mcp -H 'Content-Type: application/json' -H 'Accept: application/json, text/event-stream' -d '{\"jsonrpc\":\"2.0\",\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"'$$MCP_PROTOCOL_VERSION'\",\"capabilities\":{},\"clientInfo\":{\"name\":\"healthcheck\",\"version\":\"1.0\"}},\"id\":1}' | grep -q '\"protocolVersion\":\"'$$MCP_PROTOCOL_VERSION'\"'"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s

networks:
  public:
    external: true